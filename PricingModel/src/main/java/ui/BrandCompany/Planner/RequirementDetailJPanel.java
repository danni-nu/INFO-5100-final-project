/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.BrandCompany.Planner;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.BrandCompany.PlannerProfile;
import model.BrandCompany.Requirement;
import model.BrandCompany.RequirementsDirectory;
import model.Business.BrandEnterprise;
import model.Business.Business;
import model.Business.DesignEnterprise;
import model.Business.ProductionEnterprise;
import model.Business.RawMaterialEnterprise;
import model.DesignEnterprise.Color;
import model.DesignEnterprise.DesignerProfile;
import model.DesignEnterprise.Style;
import model.Production.ProductionMode;
import model.RawMaterialEnterprise.RawMaterial;

/**
 *
 * @author qiaohui
 */
public class RequirementDetailJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequirementDetailJPanel
     */
    JPanel WorkArea;
    Requirement requirement;
    Business business;
    BrandEnterprise brandEnterprise;
    PlannerProfile requirementPlanner;
    RawMaterialEnterprise selectedRawMaterialEnterprise=null;
    RawMaterial selectedRawmaterial=null;
    ProductionEnterprise selectdProductionEnterprise=null;
    ProductionMode selectdProductionmode=null;
    DesignEnterprise selectedDesignEnterprise=null;
    DesignerProfile selectedDesigner=null;
    Style selectedStyle=null;
    Color selectedColor=null;
    
    
    public RequirementDetailJPanel(JPanel WorkArea,Business business,Requirement requirement,BrandEnterprise brandEnterprise,PlannerProfile requirementPlanner) {
        initComponents();
        this.WorkArea=WorkArea;
        this.requirement=requirement;
        this.business=business;
        this.brandEnterprise=brandEnterprise;
        this.requirementPlanner=requirementPlanner;
        populateRawMaterialCompanyCombo();
        populateRawMaterialCombp();
        populateProductionCompanyCombo();
        populateProductionModeCombo();
        populateDesignCompanyCombo();
        populateDesginerCombp();
        populateDesignStyleCombo();
        populateDesignColorCombo();
        
        txtRequirementID.setText(requirement.getRequirementID());
        cmbProductionMode.setSelectedItem(requirement.getProductionMode());
        cmbRawMaterial.setSelectedItem(requirement.getRowMaterial());
        cmbDesignStyle.setSelectedItem(requirement.getStyle());
        cmbColor.setSelectedItem(requirement.getColor());
        txtDeadLine.setText(requirement.getDeadline());
        lblTotalCost.setText(String.valueOf(selectedRawmaterial.getPrice()+selectdProductionmode.getModePrice()+selectedDesigner.getDefaultDesignPricing()));
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbProductionMode = new javax.swing.JComboBox<>();
        cmbColor = new javax.swing.JComboBox<>();
        lblDesignStyle = new javax.swing.JLabel();
        lblRequirementID = new javax.swing.JLabel();
        btnUpdateRequirement = new javax.swing.JButton();
        lblRawMaterialpCost = new javax.swing.JLabel();
        cmbRawMaterial = new javax.swing.JComboBox<>();
        cmbDesignStyle = new javax.swing.JComboBox<>();
        lblProductionMode = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblPicture = new javax.swing.JLabel();
        lblRawMaterial = new javax.swing.JLabel();
        lblModeCost = new javax.swing.JLabel();
        lblDesignFee = new javax.swing.JLabel();
        lblDeadline = new javax.swing.JLabel();
        txtDeadLine = new javax.swing.JTextField();
        lblRawMaterialCompany = new javax.swing.JLabel();
        cmbRawMaterialCompany = new javax.swing.JComboBox<>();
        lblProductionCompany = new javax.swing.JLabel();
        cmbProductionCompany = new javax.swing.JComboBox<>();
        lblDesignCompany = new javax.swing.JLabel();
        cmbDesignCompany = new javax.swing.JComboBox<>();
        lblDesigner = new javax.swing.JLabel();
        cmbDesigner = new javax.swing.JComboBox<>();
        lblTotalCost = new javax.swing.JLabel();
        lblMaterialCost = new javax.swing.JLabel();
        lblProductionModeCost1 = new javax.swing.JLabel();
        lblDesignCost = new javax.swing.JLabel();
        lblDeadline2 = new javax.swing.JLabel();
        txtRequirementID = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        cmbProductionMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProductionMode.setEnabled(false);
        cmbProductionMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductionModeActionPerformed(evt);
            }
        });

        cmbColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbColor.setEnabled(false);
        cmbColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbColorActionPerformed(evt);
            }
        });

        lblDesignStyle.setText("Designe Style");

        lblRequirementID.setText("RequirementID");

        btnUpdateRequirement.setText("Update Requirement");
        btnUpdateRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRequirementActionPerformed(evt);
            }
        });

        lblRawMaterialpCost.setText("Raw Material Cost:");
        lblRawMaterialpCost.setEnabled(false);

        cmbRawMaterial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbRawMaterial.setEnabled(false);
        cmbRawMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRawMaterialActionPerformed(evt);
            }
        });

        cmbDesignStyle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDesignStyle.setEnabled(false);
        cmbDesignStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDesignStyleActionPerformed(evt);
            }
        });

        lblProductionMode.setText("Product Mode");

        lblColor.setText("Color ");

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Creat New Reuirement");

        btnBack.setText(">>Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblPicture.setText("Renderings");

        lblRawMaterial.setText("Raw Material");

        lblModeCost.setText("<Cost>");
        lblModeCost.setEnabled(false);

        lblDesignFee.setText("Design Fee:");
        lblDesignFee.setEnabled(false);

        lblDeadline.setText("Deadline ");

        txtDeadLine.setEnabled(false);
        txtDeadLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeadLineActionPerformed(evt);
            }
        });

        lblRawMaterialCompany.setText("Raw Material Company");

        cmbRawMaterialCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbRawMaterialCompany.setEnabled(false);
        cmbRawMaterialCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRawMaterialCompanyActionPerformed(evt);
            }
        });

        lblProductionCompany.setText("Production Company");

        cmbProductionCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProductionCompany.setEnabled(false);
        cmbProductionCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductionCompanyActionPerformed(evt);
            }
        });

        lblDesignCompany.setText("Design Company");

        cmbDesignCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDesignCompany.setEnabled(false);
        cmbDesignCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDesignCompanyActionPerformed(evt);
            }
        });

        lblDesigner.setText("Designer");

        cmbDesigner.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDesigner.setEnabled(false);
        cmbDesigner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDesignerActionPerformed(evt);
            }
        });

        lblTotalCost.setText("<Total Price >");
        lblTotalCost.setEnabled(false);

        lblMaterialCost.setText("< Cost>");
        lblMaterialCost.setEnabled(false);

        lblProductionModeCost1.setText("Production Cost:");
        lblProductionModeCost1.setEnabled(false);

        lblDesignCost.setText("<Cost>");
        lblDesignCost.setEnabled(false);

        lblDeadline2.setText("Total Price ");

        txtRequirementID.setEnabled(false);
        txtRequirementID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRequirementIDActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(229, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblRawMaterial)
                                .addGap(119, 119, 119)
                                .addComponent(cmbRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(lblRawMaterialpCost, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(lblMaterialCost, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblProductionCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(cmbProductionCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(cmbProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(lblProductionModeCost1)
                                .addGap(44, 44, 44)
                                .addComponent(lblModeCost))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDesignCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(cmbDesignCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 115, 115)
                                .addComponent(cmbDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)
                                .addComponent(lblDesignFee)
                                .addGap(64, 64, 64)
                                .addComponent(lblDesignCost))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(cmbDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblColor, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDeadline2)
                                .addGap(130, 130, 130)
                                .addComponent(lblTotalCost))
                            .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRawMaterialCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRequirementID, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRequirementID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbRawMaterialCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnUpdateRequirement)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDeadline)
                                        .addGap(140, 140, 140)
                                        .addComponent(txtDeadLine, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(28, 28, 28)
                                .addComponent(btnSave)))
                        .addGap(0, 93, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1)
                        .addGap(72, 345, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRequirementID)
                    .addComponent(txtRequirementID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblRawMaterialCompany))
                    .addComponent(cmbRawMaterialCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRawMaterial)
                            .addComponent(lblRawMaterialpCost)
                            .addComponent(lblMaterialCost))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblProductionCompany))
                    .addComponent(cmbProductionCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblProductionMode))
                    .addComponent(cmbProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblProductionModeCost1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblModeCost, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblDesignCompany))
                    .addComponent(cmbDesignCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDesignFee, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDesignCost, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(cmbDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblColor))
                    .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblDeadline))
                    .addComponent(txtDeadLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDeadline2)
                    .addComponent(lblTotalCost))
                .addGap(4, 4, 4)
                .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateRequirement)
                    .addComponent(btnSave))
                .addContainerGap(182, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbProductionModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductionModeActionPerformed
        // TODO add your handling code here:
        if (cmbProductionMode.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbProductionMode.getSelectedItem();
        selectdProductionmode=selectdProductionEnterprise.getProductionOrganization().findProductionMode(s);
        if(selectdProductionmode!=null) {
            lblModeCost.setText(String.valueOf(selectdProductionmode.getModePrice()));
        }
        try{
            lblTotalCost.setText(String.valueOf(selectedRawmaterial.getPrice()+selectdProductionmode.getModePrice()+selectedDesigner.getDefaultDesignPricing()));

        }catch(Exception e){
            return;
        }
    }//GEN-LAST:event_cmbProductionModeActionPerformed

    private void cmbColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbColorActionPerformed
        // TODO add your handling code here:
        if (cmbColor.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbColor.getSelectedItem();
        selectedColor=selectedDesignEnterprise.getColorDirectory().findColor(s);
    }//GEN-LAST:event_cmbColorActionPerformed

    private void btnUpdateRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRequirementActionPerformed
        // TODO add your handling code here:
        cmbProductionCompany.setEnabled(true);
        cmbProductionMode.setEnabled(true);
        cmbRawMaterialCompany.setEnabled(true);
        cmbRawMaterial.setEnabled(true);
        cmbDesignCompany.setEnabled(true);
        cmbDesigner.setEnabled(true);
        cmbDesignStyle.setEnabled(true);
        cmbColor.setEnabled(true);
        txtDeadLine.setEnabled(true);
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnUpdateRequirementActionPerformed

    private void cmbRawMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRawMaterialActionPerformed
        // TODO add your handling code here:

        if (cmbRawMaterial.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbRawMaterial.getSelectedItem();
        selectedRawmaterial=selectedRawMaterialEnterprise.getRawMaterialDirectory().findRawMateiral(s);
        if(selectedRawmaterial!=null) {
            lblMaterialCost.setText(String.valueOf(selectedRawmaterial.getPrice()));
        }
        try{
            lblTotalCost.setText(String.valueOf(selectedRawmaterial.getPrice()+selectdProductionmode.getModePrice()+selectedDesigner.getDefaultDesignPricing()));

        }catch(Exception e){
            return;
        }

    }//GEN-LAST:event_cmbRawMaterialActionPerformed

    private void cmbDesignStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDesignStyleActionPerformed
        // TODO add your handling code here:
        if (cmbDesignStyle.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbDesignStyle.getSelectedItem();
        selectedStyle=selectedDesignEnterprise.getStyleDirectory().findStyle(s);
    }//GEN-LAST:event_cmbDesignStyleActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtDeadLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeadLineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeadLineActionPerformed

    private void cmbRawMaterialCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRawMaterialCompanyActionPerformed
        // TODO add your handling code here:
        if (cmbRawMaterialCompany.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbRawMaterialCompany.getSelectedItem();
        selectedRawMaterialEnterprise = business.getEnterpriseDirectory().getRawMaterialEnterprise(s);

    }//GEN-LAST:event_cmbRawMaterialCompanyActionPerformed

    private void cmbProductionCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductionCompanyActionPerformed
        // TODO add your handling code here:
        if (cmbProductionCompany.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbProductionCompany.getSelectedItem();
        selectdProductionEnterprise = business.getEnterpriseDirectory().getProductionEnterprise(s);

    }//GEN-LAST:event_cmbProductionCompanyActionPerformed

    private void cmbDesignCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDesignCompanyActionPerformed
        // TODO add your handling code here:
        if (cmbDesignCompany.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbDesignCompany.getSelectedItem();
        selectedDesignEnterprise = business.getEnterpriseDirectory().getDesignEnterprise(s);

    }//GEN-LAST:event_cmbDesignCompanyActionPerformed

    private void cmbDesignerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDesignerActionPerformed
        // TODO add your handling code here:
        if (cmbDesigner.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbDesigner.getSelectedItem();
        selectedDesigner=selectedDesignEnterprise.getDesignOrganization().getDesignerDirectory().findDesignerProfile(s);
        if(selectedDesigner!=null) {
            lblDesignCost.setText(String.valueOf(selectedDesigner.getDefaultDesignPricing()));
        }
        try{
            lblTotalCost.setText(String.valueOf(selectedRawmaterial.getPrice()+selectdProductionmode.getModePrice()+selectedDesigner.getDefaultDesignPricing()));

        }catch(Exception e){
            return;
        }
    }//GEN-LAST:event_cmbDesignerActionPerformed

    private void txtRequirementIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRequirementIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRequirementIDActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
         if(txtDeadLine.getText()==null){
            JOptionPane.showMessageDialog(this, "Please input dealline.It's very important for you to be satisfied", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        RequirementsDirectory requirementsdirectory=brandEnterprise.getProductPlanningOrganization().getRequirementDirectory();
        Requirement requirement=requirementsdirectory.addANewRrequirement(selectedRawmaterial, selectedDesigner, selectdProductionmode, requirementPlanner, selectedStyle,selectedColor);
        requirement.setDeadline(txtDeadLine.getText());
        txtRequirementID.setText(requirement.getRequirementID());
        JOptionPane.showMessageDialog(this, "Requirement successfully added", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateRequirement;
    private javax.swing.JComboBox<String> cmbColor;
    private javax.swing.JComboBox<String> cmbDesignCompany;
    private javax.swing.JComboBox<String> cmbDesignStyle;
    private javax.swing.JComboBox<String> cmbDesigner;
    private javax.swing.JComboBox<String> cmbProductionCompany;
    private javax.swing.JComboBox<String> cmbProductionMode;
    private javax.swing.JComboBox<String> cmbRawMaterial;
    private javax.swing.JComboBox<String> cmbRawMaterialCompany;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblDeadline;
    private javax.swing.JLabel lblDeadline2;
    private javax.swing.JLabel lblDesignCompany;
    private javax.swing.JLabel lblDesignCost;
    private javax.swing.JLabel lblDesignFee;
    private javax.swing.JLabel lblDesignStyle;
    private javax.swing.JLabel lblDesigner;
    private javax.swing.JLabel lblMaterialCost;
    private javax.swing.JLabel lblModeCost;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblProductionCompany;
    private javax.swing.JLabel lblProductionMode;
    private javax.swing.JLabel lblProductionModeCost1;
    private javax.swing.JLabel lblRawMaterial;
    private javax.swing.JLabel lblRawMaterialCompany;
    private javax.swing.JLabel lblRawMaterialpCost;
    private javax.swing.JLabel lblRequirementID;
    private javax.swing.JLabel lblTotalCost;
    private javax.swing.JTextField txtDeadLine;
    private javax.swing.JTextField txtRequirementID;
    // End of variables declaration//GEN-END:variables
    private void populateRawMaterialCompanyCombo() {
        cmbRawMaterialCompany.removeAllItems();
        for(RawMaterialEnterprise enterprise:business.getEnterpriseDirectory().getRawMaterialEnterpriseList()){
            cmbRawMaterialCompany.addItem(enterprise.toString());
        }
    }

    private void populateProductionCompanyCombo() {
        cmbProductionCompany.removeAllItems();
        for(ProductionEnterprise enterprise:business.getEnterpriseDirectory().getProductionEnterpriseList()){
            cmbProductionCompany.addItem(enterprise.toString());
        }  
    }

    private void populateDesignCompanyCombo() {
        cmbDesignCompany.removeAllItems();
        for(DesignEnterprise enterprise:business.getEnterpriseDirectory().getDesignEnterpriseList()){
            cmbDesignCompany.addItem(enterprise.toString());
        }
        
    }
    
    private void populateDesignStyleCombo() {
        cmbDesignStyle.removeAllItems();
        for(Style style:selectedDesignEnterprise.getStyleDirectory().getStyleDirectory()){
            cmbDesignStyle.addItem(style.toString());
        }    
    }

    private void populateRawMaterialCombp() {
        cmbRawMaterial.removeAllItems();
        for(RawMaterial rawmaterial:selectedRawMaterialEnterprise.getRawMaterialDirectory().getRawMaterialDirectory()){
            cmbRawMaterial.addItem(rawmaterial.toString());
        }
    }

    private void populateProductionModeCombo() {
        cmbProductionMode.removeAllItems();

        for(ProductionMode productionmode:selectdProductionEnterprise.getProductionOrganization().getProductionModeDirectory().getProductionModeList()){
            cmbProductionMode.addItem(productionmode.toString());
        }
    }

    private void populateDesginerCombp() {
        cmbDesigner.removeAllItems();
        for(DesignerProfile designer: selectedDesignEnterprise.getDesignOrganization().getDesignerDirectory().getDesignerProfileList()){
            cmbDesigner.addItem(designer.toString());
        }
    }

    private void populateDesignColorCombo() {
        cmbColor.removeAllItems();
    
        for(Color color:selectedDesignEnterprise.getColorDirectory().getCorlorlist()){
            cmbColor.addItem(color.toString());
        } 
    }

    private void backAction() {
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        RequirementManagementJPanel manageSuppliersJPanel =(RequirementManagementJPanel) component;
        manageSuppliersJPanel.populateRequirementTable();
        CardLayout layout =(CardLayout) WorkArea.getLayout();
        layout.previous( WorkArea);
    }
    

}
