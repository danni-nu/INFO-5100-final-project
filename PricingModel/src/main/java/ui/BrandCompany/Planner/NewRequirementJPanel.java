/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.BrandCompany.Planner;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.BrandCompany.PlannerProfile;
import model.Business.Business;
import model.Business.DesignEnterprise;
import model.Business.Enterprise;
import model.Business.ProductionEnterprise;
import model.Business.RawMaterialEnterprise;
import model.DesignEnterprise.DesignerProfile;
import model.DesignEnterprise.Style;
import model.Production.ProductionMode;
import model.RawMaterialEnterprise.RawMaterial;
import java.lang.String;
import model.BrandCompany.Requirement;
import model.BrandCompany.RequirementsDirectory;
import model.Business.BrandEnterprise;
import model.Production.InventoryManagerProfile;
import model.Production.ProductionManagerProfile;
import model.Production.ProductionOrder;
import model.Production.ProductionOrderDirectory;
import model.Production.ProductionOrganization;
import model.RawMaterialEnterprise.RawMaterialOrder;
import model.RawMaterialEnterprise.RawMaterialOrderDirectory;

/**
 *
 * @author qiaohui
 */
public class NewRequirementJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewRequirementJPanel
     */
    PlannerProfile plannerProfile;
    Business business;
    JPanel plannerWorkArea;
    BrandEnterprise brandEnterprise;
    RawMaterialEnterprise selectedRawMaterialEnterprise=null;
    RawMaterial selectedRawmaterial=null;
    ProductionEnterprise selectdProductionEnterprise=null;
    ProductionMode selectdProductionmode=null;
    DesignEnterprise selectedDesignEnterprise=null;
    DesignerProfile selectedDesigner=null;
    Style selectedStyle=null;
    
    
    
    public NewRequirementJPanel(Business business, PlannerProfile requirementPlanner, JPanel PlannerWorkArea,BrandEnterprise brandEnterprise) {
        initComponents();
        this.plannerProfile=requirementPlanner;
        this.business=business;
        this.plannerWorkArea=PlannerWorkArea;
        this.brandEnterprise=brandEnterprise;
        populateRawMaterialCompanyCombo();
        populateRawMaterialCombp();
        populateProductionCompanyCombo();
        populateProductionModeCombo();
        populateDesignCompanyCombo();
        populateDesginerCombp();
        populateDesignStyleCombo();
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbProductionMode = new javax.swing.JComboBox<>();
        cmbColor = new javax.swing.JComboBox<>();
        lblDesignStyle = new javax.swing.JLabel();
        lblProductName = new javax.swing.JLabel();
        CreateRerquirement = new javax.swing.JButton();
        lblRawMaterialpCost = new javax.swing.JLabel();
        cmbRawMaterial = new javax.swing.JComboBox<>();
        cmbDesignStyle = new javax.swing.JComboBox<>();
        lblProductionMode = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblPicture = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblRawMaterial = new javax.swing.JLabel();
        lblModeCost = new javax.swing.JLabel();
        lblDesignFee = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblDeadline = new javax.swing.JLabel();
        txtDeadLine = new javax.swing.JTextField();
        lblRawMaterialCompany = new javax.swing.JLabel();
        cmbRawMaterialCompany = new javax.swing.JComboBox<>();
        lblProductionCompany = new javax.swing.JLabel();
        cmbProductionCompany = new javax.swing.JComboBox<>();
        lblDesignCompany = new javax.swing.JLabel();
        cmbDesignCompany = new javax.swing.JComboBox<>();
        lblDesignStyle1 = new javax.swing.JLabel();
        cmbDesigner = new javax.swing.JComboBox<>();
        lblTotalCost = new javax.swing.JLabel();
        lblMaterialCost = new javax.swing.JLabel();
        lblProductionModeCost1 = new javax.swing.JLabel();
        lblDesignCost = new javax.swing.JLabel();
        lblDeadline2 = new javax.swing.JLabel();

        cmbProductionMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProductionMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductionModeActionPerformed(evt);
            }
        });

        cmbColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDesignStyle.setText("Designe Style");

        lblProductName.setText("Product Name");

        CreateRerquirement.setText("Create Requirement");
        CreateRerquirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateRerquirementActionPerformed(evt);
            }
        });

        lblRawMaterialpCost.setText("Raw Material Cost:");

        cmbRawMaterial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbRawMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRawMaterialActionPerformed(evt);
            }
        });

        cmbDesignStyle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDesignStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDesignStyleActionPerformed(evt);
            }
        });

        lblProductionMode.setText("Product Mode");

        lblColor.setText("Color ");

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Creat New Reuirement");

        btnBack.setText(">>Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblPicture.setText("Renderings");

        jLabel8.setText("Picture is Here:*******");
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblRawMaterial.setText("Raw Material");

        lblModeCost.setText("<Cost>");

        lblDesignFee.setText("Design Fee:");

        txtProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNameActionPerformed(evt);
            }
        });

        lblDeadline.setText("Deadline ");

        txtDeadLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeadLineActionPerformed(evt);
            }
        });

        lblRawMaterialCompany.setText("Raw Material Company");

        cmbRawMaterialCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbRawMaterialCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRawMaterialCompanyActionPerformed(evt);
            }
        });

        lblProductionCompany.setText("Production Company");

        cmbProductionCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProductionCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductionCompanyActionPerformed(evt);
            }
        });

        lblDesignCompany.setText("Design Company");

        cmbDesignCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDesignCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDesignCompanyActionPerformed(evt);
            }
        });

        lblDesignStyle1.setText("Designer");

        cmbDesigner.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDesigner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDesignerActionPerformed(evt);
            }
        });

        lblTotalCost.setText("<Total Price >");

        lblMaterialCost.setText("< Cost>");

        lblProductionModeCost1.setText("Production Cost:");

        lblDesignCost.setText("<Cost>");

        lblDeadline2.setText("Total Price ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnBack)
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblProductName)
                                        .addGap(49, 49, 49))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblRawMaterialCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbRawMaterialCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblProductionCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(cmbProductionCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDesignCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(cmbDesignCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(lblDesignStyle1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(115, 115, 115)
                                                .addComponent(cmbDesigner, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(lblDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(49, 49, 49)
                                                .addComponent(cmbDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(95, 95, 95)
                                        .addComponent(lblDesignFee))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(183, 183, 183)
                                            .addComponent(CreateRerquirement))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(lblColor)
                                                .addGap(49, 49, 49)
                                                .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblDeadline)
                                                    .addComponent(lblDeadline2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblTotalCost)
                                                    .addComponent(txtDeadLine, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblDesignCost)
                                .addGap(19, 19, 19))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(cmbProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(119, 119, 119)
                                        .addComponent(cmbRawMaterial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(lblRawMaterialpCost, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblMaterialCost, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblModeCost)
                                        .addGap(29, 29, 29)))))))
                .addGap(23, 23, 23))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(510, Short.MAX_VALUE)
                    .addComponent(lblProductionModeCost1)
                    .addGap(139, 139, 139)))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CreateRerquirement, cmbColor, cmbDesignStyle, cmbProductionMode, cmbRawMaterial, lblColor, lblDesignStyle, lblProductName, lblProductionMode, lblRawMaterialpCost});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btnBack)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblProductName)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRawMaterialCompany)
                    .addComponent(cmbRawMaterialCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRawMaterialpCost)
                    .addComponent(cmbRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRawMaterial)
                    .addComponent(lblMaterialCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProductionCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProductionCompany))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductionMode)
                    .addComponent(cmbProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblModeCost, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDesignCompany)
                    .addComponent(cmbDesignCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDesignStyle1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDesignFee, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDesignCost, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblColor))
                    .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeadline)
                    .addComponent(txtDeadLine, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CreateRerquirement)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotalCost)
                            .addComponent(lblDeadline2))
                        .addGap(4, 4, 4)
                        .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(230, 230, 230)
                    .addComponent(lblProductionModeCost1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(397, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbProductionModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductionModeActionPerformed
        // TODO add your handling code here:
        if (cmbProductionMode.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbProductionMode.getSelectedItem();
        selectdProductionmode=selectdProductionEnterprise.getProductionOrganization().findProductionMode(s);
        if(selectdProductionmode!=null) {
            lblModeCost.setText(String.valueOf(selectdProductionmode.getModePrice()));
        }
    }//GEN-LAST:event_cmbProductionModeActionPerformed

    private void txtProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameActionPerformed

    private void txtDeadLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeadLineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeadLineActionPerformed

    private void cmbDesignerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDesignerActionPerformed
        // TODO add your handling code here:
        if (cmbDesigner.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbDesigner.getSelectedItem();
        selectedDesigner=selectedDesignEnterprise.getDesignOrganization().getDesignerDirectory().findDesignerProfile(s);
        if(selectedDesigner!=null) {
            lblDesignCost.setText(String.valueOf(selectedDesigner.getDefaultDesignPricing()));
        }
    }//GEN-LAST:event_cmbDesignerActionPerformed

    private void cmbRawMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRawMaterialActionPerformed
        // TODO add your handling code here:
        
         if (cmbRawMaterial.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbRawMaterial.getSelectedItem();
        selectedRawmaterial=selectedRawMaterialEnterprise.getRawMaterialDirectory().findRawMateiral(s);
        if(selectedRawmaterial!=null) {
            lblMaterialCost.setText(String.valueOf(selectedRawmaterial.getPrice()));
        }
    
    }//GEN-LAST:event_cmbRawMaterialActionPerformed

    private void cmbDesignStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDesignStyleActionPerformed
        // TODO add your handling code here:
        if (cmbDesignStyle.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbDesignStyle.getSelectedItem();
        selectedStyle=selectedDesignEnterprise.getStyleDirectory().findStyle(s);
    }//GEN-LAST:event_cmbDesignStyleActionPerformed

    private void CreateRerquirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateRerquirementActionPerformed
        // TODO add your handling code here:
//       String s=(String)cmbRawMaterialCompany.getSelectedItem();
//       RawMaterialEnterprise selectedRawMaterialEnterprise=business.getEnterpriseDirectory().getRawMaterialEnterprise(s);
//      RawMaterialEnterprise selectedRawmaterial=selectedRawMaterialEnterprise.getRawMaterialDirectory().findRawMateiral(m);
//       String s1=(String)cmbDesignCompany.getSelectedItem();
//       DesignEnterprise selectedDesignEnterprise=business.getEnterpriseDirectory().getDesignEnterprise(s1);
//       String s2=(String) cmbDesigner.getSelectedItem();
//       DesignerProfile selectedDesigner=selectedDesignEnterprise.getDesignOrganization().getDesignerDirectory().findDesignerProfile(s2);
//       String s3=(String) cmbProductionCompany.getSelectedItem();
//       ProductionEnterprise selectedEnterprise2=business.getEnterpriseDirectory().getProductionEnterprise(s3);
//       String s4=(String) cmbProductionMode.getSelectedItem();
//       ProductionMode selectdProductionmode=selectedEnterprise2.getProductionOrganization().findProductionMode(s4);
//       String s5=(String)cmbDesignStyle.getSelectedItem();
//       Style selectedStyle=selectedDesignEnterprise.getStyleDirectory().findStyle(s5);
        RequirementsDirectory requirementsdirectory=brandEnterprise.getProductPlanningOrganization().getRequirementDirectory();
        Requirement requirement=requirementsdirectory.addANewRrequirement(selectedRawmaterial, selectedDesigner, selectdProductionmode, plannerProfile, selectedStyle);
        
       JOptionPane.showMessageDialog(this, "Requirement successfully added", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_CreateRerquirementActionPerformed

    private void cmbRawMaterialCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRawMaterialCompanyActionPerformed
        // TODO add your handling code here:
        if (cmbRawMaterialCompany.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbRawMaterialCompany.getSelectedItem();
        selectedRawMaterialEnterprise = business.getEnterpriseDirectory().getRawMaterialEnterprise(s);
    }//GEN-LAST:event_cmbRawMaterialCompanyActionPerformed

    private void cmbProductionCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductionCompanyActionPerformed
        // TODO add your handling code here:
        if (cmbProductionCompany.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbProductionCompany.getSelectedItem();
        selectdProductionEnterprise = business.getEnterpriseDirectory().getProductionEnterprise(s);
        
    }//GEN-LAST:event_cmbProductionCompanyActionPerformed

    private void cmbDesignCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDesignCompanyActionPerformed
        // TODO add your handling code here:
        if (cmbDesignCompany.getSelectedItem()==null) {
            return;
        }
        String s=(String)cmbDesignCompany.getSelectedItem();
        selectedDesignEnterprise = business.getEnterpriseDirectory().getDesignEnterprise(s);
        
        populateDesginerCombp();
        populateDesignStyleCombo();
        
    }//GEN-LAST:event_cmbDesignCompanyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        plannerWorkArea.remove(this);
        CardLayout layout = (CardLayout) plannerWorkArea.getLayout();
        layout.previous(plannerWorkArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateRerquirement;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cmbColor;
    private javax.swing.JComboBox<String> cmbDesignCompany;
    private javax.swing.JComboBox<String> cmbDesignStyle;
    private javax.swing.JComboBox<String> cmbDesigner;
    private javax.swing.JComboBox<String> cmbProductionCompany;
    private javax.swing.JComboBox<String> cmbProductionMode;
    private javax.swing.JComboBox<String> cmbRawMaterial;
    private javax.swing.JComboBox<String> cmbRawMaterialCompany;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblDeadline;
    private javax.swing.JLabel lblDeadline2;
    private javax.swing.JLabel lblDesignCompany;
    private javax.swing.JLabel lblDesignCost;
    private javax.swing.JLabel lblDesignFee;
    private javax.swing.JLabel lblDesignStyle;
    private javax.swing.JLabel lblDesignStyle1;
    private javax.swing.JLabel lblMaterialCost;
    private javax.swing.JLabel lblModeCost;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblProductionCompany;
    private javax.swing.JLabel lblProductionMode;
    private javax.swing.JLabel lblProductionModeCost1;
    private javax.swing.JLabel lblRawMaterial;
    private javax.swing.JLabel lblRawMaterialCompany;
    private javax.swing.JLabel lblRawMaterialpCost;
    private javax.swing.JLabel lblTotalCost;
    private javax.swing.JTextField txtDeadLine;
    private javax.swing.JTextField txtProductName;
    // End of variables declaration//GEN-END:variables

    private void populateRawMaterialCompanyCombo() {
        cmbRawMaterialCompany.removeAllItems();
        for(RawMaterialEnterprise enterprise:business.getEnterpriseDirectory().getRawMaterialEnterpriseList()){
            cmbRawMaterialCompany.addItem(enterprise.toString());
        }
//        for(Enterprise enterprise:business.getEnterpriseDirectory().findRawMaterialEnterpriseList()){
//            cmbRawMaterialCompany.addItem(enterprise);
//        }
    }

    private void populateProductionCompanyCombo() {
        cmbProductionCompany.removeAllItems();
        for(ProductionEnterprise enterprise:business.getEnterpriseDirectory().getProductionEnterpriseList()){
            cmbProductionCompany.addItem(enterprise.toString());
        }  
//        for(Enterprise enterprise:business.getEnterpriseDirectory().findProductionEnterpriseList()){
//            cmbProductionCompany.addItem(enterprise);
//        }
    }

    private void populateDesignCompanyCombo() {
        cmbDesignCompany.removeAllItems();
        for(DesignEnterprise enterprise:business.getEnterpriseDirectory().getDesignEnterpriseList()){
            cmbDesignCompany.addItem(enterprise.toString());
        }
        
    }
    
    private void populateDesignStyleCombo() {
        cmbDesignStyle.removeAllItems();
        //DesignEnterprise selectedRawMaterialEnterprise=(DesignEnterprise)cmbDesignCompany.getSelectedItem();
//        String s=(String)cmbDesignCompany.getSelectedItem();
//        DesignEnterprise selectedEnterprise=business.getEnterpriseDirectory().getDesignEnterprise(s);
        for(Style style:selectedDesignEnterprise.getStyleDirectory().getStyleDirectory()){
            cmbDesignStyle.addItem(style.toString());
        }    
    }

    private void populateRawMaterialCombp() {
        cmbRawMaterial.removeAllItems();
        //RawMaterialEnterprise selectedRawMaterialEnterprise=(RawMaterialEnterprise)cmbRawMaterialCompany.getSelectedItem();
        for(RawMaterial rawmaterial:selectedRawMaterialEnterprise.getRawMaterialDirectory().getRawMaterialDirectory()){
            cmbRawMaterial.addItem(rawmaterial.toString());
        }
    }

    private void populateProductionModeCombo() {
        cmbProductionMode.removeAllItems();
//        String s=(String)cmbProductionCompany.getSelectedItem();
//        ProductionEnterprise selectedEnterprise=business.getEnterpriseDirectory().getProductionEnterprise(s);
        //ProductionEnterprise productionenterprise=(ProductionEnterprise)cmbProductionCompany.getSelectedItem();
        for(ProductionMode productionmode:selectdProductionEnterprise.getProductionOrganization().getProductionModeDirectory().getProductionModeList()){
            cmbProductionMode.addItem(productionmode.toString());
        }
    }

    private void populateDesginerCombp() {
        cmbDesigner.removeAllItems();
//        String s=(String)cmbDesignCompany.getSelectedItem();
//        DesignEnterprise selectedEnterprise=business.getEnterpriseDirectory().getDesignEnterprise(s);
        for(DesignerProfile designer: selectedDesignEnterprise.getDesignOrganization().getDesignerDirectory().getDesignerProfileList()){
            cmbDesigner.addItem(designer.toString());
        }
    }
    
    
    
    
}
