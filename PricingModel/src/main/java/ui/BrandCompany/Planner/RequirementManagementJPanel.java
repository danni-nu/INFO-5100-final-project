/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.BrandCompany.Planner;

import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.BrandCompany.PlannerProfile;
import model.BrandCompany.Requirement;
import model.Business.BrandEnterprise;
import model.Business.Business;
import model.DesignEnterprise.RequirementAssignment;
import model.DesignEnterprise.RequirementSolution;

/**
 *
 * @author qiaohui
 */
public class RequirementManagementJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RquirementManagementJPanel
     */
    JPanel WorkArea;
    Business business;
    PlannerProfile requirementPlanner;
    BrandEnterprise brandEnterprise;
    
    private final JFileChooser fileChooser = new JFileChooser();
    ImageIcon logoImage;
    
    public RequirementManagementJPanel(Business business, PlannerProfile requirementPlanner, JPanel WorkArea,BrandEnterprise brandEnterprise) {
        initComponents();
        this.business=business;
        this.WorkArea=WorkArea;
        this.requirementPlanner=requirementPlanner;
        this.brandEnterprise=brandEnterprise;
        populateRequirementTable();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        others = new javax.swing.JScrollPane();
        tblRequirementTable = new javax.swing.JTable();
        btnCreateNewRequirement = new javax.swing.JButton();
        btnDeleteRequirement = new javax.swing.JButton();
        btnSearchRequirement = new javax.swing.JButton();
        lblPicture = new javax.swing.JLabel();
        btnCheckDesignerSolution = new javax.swing.JButton();
        imgLogo = new javax.swing.JLabel();
        btnApproval = new javax.swing.JButton();
        btnRefuse = new javax.swing.JButton();
        lblRawMaterial = new javax.swing.JLabel();
        lblProductionMode = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        lblDesignStyle = new javax.swing.JLabel();
        lblRequirementID = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSearchRequirement = new javax.swing.JTextField();
        txtRequirementID = new javax.swing.JTextField();
        txtRawMaterial = new javax.swing.JTextField();
        txtProductionMode = new javax.swing.JTextField();
        txtDesignStyle = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        lblDesigner = new javax.swing.JLabel();
        txtDesigner = new javax.swing.JTextField();
        btnRequirementDetail = new javax.swing.JButton();
        lblRequirementID1 = new javax.swing.JLabel();
        spnRateForAssignment = new javax.swing.JSpinner();
        lblRequirementID2 = new javax.swing.JLabel();
        txtEvaluation = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(249, 239, 224));
        setForeground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(123, 145, 128));
        btnBack.setText(">>Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 18, -1, -1));

        tblRequirementTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RequirementID", "Material", "Production", "Designer", "Style", "Color", "Deadline", "Status"
            }
        ));
        others.setViewportView(tblRequirementTable);
        if (tblRequirementTable.getColumnModel().getColumnCount() > 0) {
            tblRequirementTable.getColumnModel().getColumn(5).setResizable(false);
            tblRequirementTable.getColumnModel().getColumn(7).setResizable(false);
        }

        add(others, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 99, 790, 160));

        btnCreateNewRequirement.setBackground(new java.awt.Color(123, 145, 128));
        btnCreateNewRequirement.setText("Create New Requirement");
        btnCreateNewRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewRequirementActionPerformed(evt);
            }
        });
        add(btnCreateNewRequirement, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, -1, -1));

        btnDeleteRequirement.setBackground(new java.awt.Color(123, 145, 128));
        btnDeleteRequirement.setText("Delete Requirement");
        btnDeleteRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRequirementActionPerformed(evt);
            }
        });
        add(btnDeleteRequirement, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, -1, -1));

        btnSearchRequirement.setBackground(new java.awt.Color(123, 145, 128));
        btnSearchRequirement.setText("Search Requirement");
        btnSearchRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRequirementActionPerformed(evt);
            }
        });
        add(btnSearchRequirement, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 64, -1, -1));
        add(lblPicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 329, 581, 23));

        btnCheckDesignerSolution.setBackground(new java.awt.Color(123, 145, 128));
        btnCheckDesignerSolution.setText("Check Designer Solution");
        btnCheckDesignerSolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckDesignerSolutionActionPerformed(evt);
            }
        });
        add(btnCheckDesignerSolution, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, -1, -1));

        imgLogo.setText("Picture is Here:*******");
        imgLogo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(imgLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 370, 237, 197));

        btnApproval.setBackground(new java.awt.Color(123, 145, 128));
        btnApproval.setText("Approval ");
        btnApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApprovalActionPerformed(evt);
            }
        });
        add(btnApproval, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 550, -1, 20));

        btnRefuse.setBackground(new java.awt.Color(123, 145, 128));
        btnRefuse.setText("Refuse");
        btnRefuse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefuseActionPerformed(evt);
            }
        });
        add(btnRefuse, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 550, 87, 20));

        lblRawMaterial.setText("Raw Material");
        add(lblRawMaterial, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 82, -1));

        lblProductionMode.setText("Product Mode");
        add(lblProductionMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 450, -1, -1));

        lblColor.setText("Color ");
        add(lblColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 520, 82, -1));

        lblDesignStyle.setText("Design Style");
        add(lblDesignStyle, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 550, 82, -1));

        lblRequirementID.setText("RequirementID");
        add(lblRequirementID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, -1, -1));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        jLabel8.setText("Requirement Management");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 38, -1, -1));
        add(txtSearchRequirement, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 64, 114, -1));

        txtRequirementID.setEnabled(false);
        txtRequirementID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRequirementIDActionPerformed(evt);
            }
        });
        add(txtRequirementID, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 382, 88, -1));

        txtRawMaterial.setEnabled(false);
        txtRawMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRawMaterialActionPerformed(evt);
            }
        });
        add(txtRawMaterial, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 416, 88, -1));

        txtProductionMode.setEnabled(false);
        txtProductionMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductionModeActionPerformed(evt);
            }
        });
        add(txtProductionMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 451, 88, -1));

        txtDesignStyle.setEnabled(false);
        txtDesignStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDesignStyleActionPerformed(evt);
            }
        });
        add(txtDesignStyle, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 550, 88, -1));

        txtColor.setEnabled(false);
        txtColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorActionPerformed(evt);
            }
        });
        add(txtColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 510, 88, -1));

        lblDesigner.setText("Designer");
        add(lblDesigner, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 484, 86, -1));

        txtDesigner.setEnabled(false);
        add(txtDesigner, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 481, 88, -1));

        btnRequirementDetail.setBackground(new java.awt.Color(123, 145, 128));
        btnRequirementDetail.setText("Check Requirement Detail");
        btnRequirementDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequirementDetailActionPerformed(evt);
            }
        });
        add(btnRequirementDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, -1, -1));

        lblRequirementID1.setText("Rating");
        add(lblRequirementID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 390, 95, -1));
        add(spnRateForAssignment, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 390, 95, -1));

        lblRequirementID2.setText("Evaluation:");
        add(lblRequirementID2, new org.netbeans.lib.awtextra.AbsoluteConstraints(566, 448, 86, -1));
        add(txtEvaluation, new org.netbeans.lib.awtextra.AbsoluteConstraints(566, 471, 209, 58));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Requirement Solution Review");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 334, 197, 24));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRequirementActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0); 
        brandEnterprise.getProductPlanningOrganization().getRequirementDirectory().deleteRequirement(requirement);
        populateRequirementTable();
        JOptionPane.showMessageDialog(null, "The requirement is deleted", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnDeleteRequirementActionPerformed

    private void txtRequirementIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRequirementIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRequirementIDActionPerformed

    private void btnCreateNewRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewRequirementActionPerformed
        // TODO add your handling code here:
        NewRequirementJPanel aos = new NewRequirementJPanel(business,requirementPlanner, WorkArea,brandEnterprise);
        WorkArea.add("Requirement Management", aos);
        CardLayout layout =(CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);
        
    }//GEN-LAST:event_btnCreateNewRequirementActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        WorkArea.remove(this);
        CardLayout layout = (CardLayout) WorkArea.getLayout();
        layout.previous(WorkArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCheckDesignerSolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckDesignerSolutionActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0);
        RequirementAssignment requirementAssignment=requirement.getRequirementAssignment();
        if(requirementAssignment!=null){
            RequirementSolution requriemeentSolution =requirementAssignment.getRequirementSolution();
                if (requriemeentSolution.getProductImage()!=null) {
                    imgLogo.setIcon(requriemeentSolution.getProductImage());
                } else {
                    imgLogo.setText("No Logo");
                } 
        }else{
            JOptionPane.showMessageDialog(null, "This requirement doesn't have an assignment!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
         txtRequirementID.setText(requirement.getRequirementID());
         txtProductionMode.setText(requirement.getProductionMode().getModeName());
         txtRawMaterial.setText(requirement.getRowMaterialName());
         txtColor.setText(requirement.getColor().getColorName());
         txtDesignStyle.setText(requirement.getStyle().getStyleName());
         txtDesigner.setText(requirement.getDesignerProfile().toString());
    
    }//GEN-LAST:event_btnCheckDesignerSolutionActionPerformed

    private void txtRawMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRawMaterialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRawMaterialActionPerformed

    private void txtProductionModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductionModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductionModeActionPerformed

    private void txtDesignStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDesignStyleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDesignStyleActionPerformed

    private void txtColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorActionPerformed

    private void btnSearchRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRequirementActionPerformed
        // TODO add your handling code here:
        String requirementID=txtSearchRequirement.getText();
        populateRequirementTable(requirementID);
    }//GEN-LAST:event_btnSearchRequirementActionPerformed

    private void btnApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApprovalActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0);   
        RequirementAssignment requirementAssignment=requirement.getRequirementAssignment();
        if (requirementAssignment!=null) {
           requirementAssignment.setRate((Integer)spnRateForAssignment.getValue());
           requirementAssignment.setEvaluation(txtEvaluation.getText());
        } else{
            JOptionPane.showMessageDialog(null, "This requirement hasn't have any assignment, you can not review it", "Information", JOptionPane.WARNING_MESSAGE);
            return;
        }
        requirement.setStatus(true);
        populateRequirementTable();
        JOptionPane.showMessageDialog(null, "Your aprroved this requirement. Now your colleages can place a order on this requirement!", "Information", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnApprovalActionPerformed

    private void btnRefuseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefuseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0);
        
        requirement.setStatus(false);
        populateRequirementTable();
        JOptionPane.showMessageDialog(null, "Your refused this requirement.This assignment will go back to Design Enterprise!", "Information", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnRefuseActionPerformed

    private void btnRequirementDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequirementDetailActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0); 
        RequirementDetailJPanel rdjpanel= new RequirementDetailJPanel(WorkArea,business,requirement,brandEnterprise,requirementPlanner);
        WorkArea.add("Requirement Management", rdjpanel);
        CardLayout layout =(CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);
    }//GEN-LAST:event_btnRequirementDetailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproval;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckDesignerSolution;
    private javax.swing.JButton btnCreateNewRequirement;
    private javax.swing.JButton btnDeleteRequirement;
    private javax.swing.JButton btnRefuse;
    private javax.swing.JButton btnRequirementDetail;
    private javax.swing.JButton btnSearchRequirement;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblDesignStyle;
    private javax.swing.JLabel lblDesigner;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblProductionMode;
    private javax.swing.JLabel lblRawMaterial;
    private javax.swing.JLabel lblRequirementID;
    private javax.swing.JLabel lblRequirementID1;
    private javax.swing.JLabel lblRequirementID2;
    private javax.swing.JScrollPane others;
    private javax.swing.JSpinner spnRateForAssignment;
    private javax.swing.JTable tblRequirementTable;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtDesignStyle;
    private javax.swing.JTextField txtDesigner;
    private javax.swing.JTextField txtEvaluation;
    private javax.swing.JTextField txtProductionMode;
    private javax.swing.JTextField txtRawMaterial;
    private javax.swing.JTextField txtRequirementID;
    private javax.swing.JTextField txtSearchRequirement;
    // End of variables declaration//GEN-END:variables

    public void populateRequirementTable() {
        DefaultTableModel model=(DefaultTableModel)tblRequirementTable.getModel();
        model.setRowCount(0);
        for(Requirement re:brandEnterprise.getProductPlanningOrganization().getRequirementDirectory().getRequirementsDirectory()){
            Object row[] = new Object[8];
            row[0] = re;
            row[1] = re.getRowMaterial();
            row[2] = re.getProductionMode();
            row[3] = re.getDesignerProfile().getPerson().getPersonName();
            row[4] = re.getStyle();
            row[5] = re.getColor();
            row[6] = re.getDeadline();
            row[7] = re.getRequirementstatus();
            model.addRow(row);
            }
    }

    private void populateRequirementTable(String productName) {
        DefaultTableModel model=(DefaultTableModel)tblRequirementTable.getModel();
        model.setRowCount(0);
        for(Requirement re:brandEnterprise.getProductPlanningOrganization().getRequirementDirectory().getRequirementsDirectory()){
            if(re.getRequirementID().equals(productName)){
            Object row[] = new Object[8];
            row[0] = re;
            row[1] = re.getRowMaterial();
            row[2] = re.getProductionMode();
            row[3] = re.getDesignerProfile().getPerson().getPersonName();
            row[4] = re.getStyle();
            row[5] = re.getColor();
            row[6] = re.getDeadline();
            row[7] = re.getRequirementstatus();
            model.addRow(row);
            }
            }
    }
}
