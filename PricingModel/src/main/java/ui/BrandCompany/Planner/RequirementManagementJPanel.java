/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.BrandCompany.Planner;

import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.BrandCompany.PlannerProfile;
import model.BrandCompany.Requirement;
import model.Business.BrandEnterprise;
import model.Business.Business;
import model.DesignEnterprise.RequirementAssignment;
import model.DesignEnterprise.RequirementSolution;

/**
 *
 * @author qiaohui
 */
public class RequirementManagementJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RquirementManagementJPanel
     */
    JPanel WorkArea;
    Business business;
    PlannerProfile requirementPlanner;
    BrandEnterprise brandEnterprise;
    
    private final JFileChooser fileChooser = new JFileChooser();
    ImageIcon logoImage;
    
    public RequirementManagementJPanel(Business business, PlannerProfile requirementPlanner, JPanel WorkArea,BrandEnterprise brandEnterprise) {
        initComponents();
        this.business=business;
        this.WorkArea=WorkArea;
        this.requirementPlanner=requirementPlanner;
        this.brandEnterprise=brandEnterprise;
        populateRequirementTable();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        others = new javax.swing.JScrollPane();
        tblRequirementTable = new javax.swing.JTable();
        btnCreateNewRequirement = new javax.swing.JButton();
        btnDeleteRequirement = new javax.swing.JButton();
        btnSearchRequirement = new javax.swing.JButton();
        lblPicture = new javax.swing.JLabel();
        btnCheckDesignerSolution = new javax.swing.JButton();
        imgLogo = new javax.swing.JLabel();
        btnApproval = new javax.swing.JButton();
        btnRefuse = new javax.swing.JButton();
        lblRawMaterial = new javax.swing.JLabel();
        lblProductionMode = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        lblDesignStyle = new javax.swing.JLabel();
        lblRequirementID = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSearchRequirement = new javax.swing.JTextField();
        txtRequirementID = new javax.swing.JTextField();
        txtRawMaterial = new javax.swing.JTextField();
        txtProductionMode = new javax.swing.JTextField();
        txtDesignStyle = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        lblDesigner = new javax.swing.JLabel();
        txtDesigner = new javax.swing.JTextField();
        btnRequirementDetail = new javax.swing.JButton();

        setForeground(new java.awt.Color(255, 255, 255));

        btnBack.setText(">>Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblRequirementTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RequirementsID", "Material", "Production", "Designer", "Style", "Color", "Deadline", "Solution Status"
            }
        ));
        others.setViewportView(tblRequirementTable);
        if (tblRequirementTable.getColumnModel().getColumnCount() > 0) {
            tblRequirementTable.getColumnModel().getColumn(5).setResizable(false);
            tblRequirementTable.getColumnModel().getColumn(7).setResizable(false);
        }

        btnCreateNewRequirement.setText("Create New Requirement");
        btnCreateNewRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewRequirementActionPerformed(evt);
            }
        });

        btnDeleteRequirement.setText("Delete Requirement");
        btnDeleteRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRequirementActionPerformed(evt);
            }
        });

        btnSearchRequirement.setText("Search Requirement");
        btnSearchRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRequirementActionPerformed(evt);
            }
        });

        lblPicture.setText("Picture:");

        btnCheckDesignerSolution.setText("Check Designer Solution");
        btnCheckDesignerSolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckDesignerSolutionActionPerformed(evt);
            }
        });

        imgLogo.setText("Picture is Here:*******");
        imgLogo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnApproval.setText("Approval ");
        btnApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApprovalActionPerformed(evt);
            }
        });

        btnRefuse.setText("Refuse");
        btnRefuse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefuseActionPerformed(evt);
            }
        });

        lblRawMaterial.setText("Raw Material");

        lblProductionMode.setText("Product Mode");

        lblColor.setText("Color ");

        lblDesignStyle.setText("Design Style");

        lblRequirementID.setText("RequirementID");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel8.setText("Requirement Management");

        txtRequirementID.setEnabled(false);
        txtRequirementID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRequirementIDActionPerformed(evt);
            }
        });

        txtRawMaterial.setEnabled(false);
        txtRawMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRawMaterialActionPerformed(evt);
            }
        });

        txtProductionMode.setEnabled(false);
        txtProductionMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductionModeActionPerformed(evt);
            }
        });

        txtDesignStyle.setEnabled(false);
        txtDesignStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDesignStyleActionPerformed(evt);
            }
        });

        txtColor.setEnabled(false);
        txtColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorActionPerformed(evt);
            }
        });

        lblDesigner.setText("Designer");

        txtDesigner.setEnabled(false);

        btnRequirementDetail.setText("Check Requirement Detail");
        btnRequirementDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequirementDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnApproval)
                                .addGap(55, 55, 55)
                                .addComponent(btnRefuse))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRequirementID)
                                    .addComponent(lblProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblColor)
                                    .addComponent(lblDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDesignStyle, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(txtProductionMode, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(txtRequirementID, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(txtRawMaterial, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(txtColor, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(txtDesigner)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(158, 158, 158)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSearchRequirement)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchRequirement, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnRequirementDetail)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCreateNewRequirement))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 162, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCheckDesignerSolution)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteRequirement)))
                        .addGap(36, 36, 36))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(others, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblColor, lblDesignStyle, lblProductionMode, lblRawMaterial});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchRequirement)
                    .addComponent(txtSearchRequirement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(others, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateNewRequirement)
                    .addComponent(btnDeleteRequirement)
                    .addComponent(btnCheckDesignerSolution)
                    .addComponent(btnRequirementDetail))
                .addGap(4, 4, 4)
                .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRequirementID)
                            .addComponent(txtRequirementID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRawMaterial)
                            .addComponent(txtRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductionMode)
                            .addComponent(txtProductionMode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblColor)
                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDesignStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApproval)
                    .addComponent(btnRefuse))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblColor, lblDesignStyle, lblProductionMode, lblRawMaterial});

    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRequirementActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0); 
        brandEnterprise.getProductPlanningOrganization().getRequirementDirectory().deleteRequirement(requirement);
        populateRequirementTable();
        JOptionPane.showMessageDialog(null, "The requirement is deleted", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnDeleteRequirementActionPerformed

    private void txtRequirementIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRequirementIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRequirementIDActionPerformed

    private void btnCreateNewRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewRequirementActionPerformed
        // TODO add your handling code here:
        NewRequirementJPanel aos = new NewRequirementJPanel(business,requirementPlanner, WorkArea,brandEnterprise);
        WorkArea.add("Requirement Management", aos);
        CardLayout layout =(CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);
        
    }//GEN-LAST:event_btnCreateNewRequirementActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        WorkArea.remove(this);
        CardLayout layout = (CardLayout) WorkArea.getLayout();
        layout.previous(WorkArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCheckDesignerSolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckDesignerSolutionActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0);
        RequirementAssignment requirementAssignment=requirement.getRequirementAssignment();
        if(requirementAssignment!=null){
            RequirementSolution requriemeentSolution =requirementAssignment.getRequirementSolution();
                if (requriemeentSolution.getProductImage()!=null) {
                    imgLogo.setIcon(requriemeentSolution.getProductImage());
                } else {
                    imgLogo.setText("No Logo");
                } 
        }
         txtRequirementID.setText(requirement.getRequirementID());
         txtProductionMode.setText(requirement.getProductionMode().getModeName());
         txtRawMaterial.setText(requirement.getRowMaterialName());
         txtColor.setText(requirement.getColor().getColorName());
         txtDesignStyle.setText(requirement.getStyle().getStyleName());
         txtDesigner.setText(requirement.getDesignerProfile().toString());
    
    }//GEN-LAST:event_btnCheckDesignerSolutionActionPerformed

    private void txtRawMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRawMaterialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRawMaterialActionPerformed

    private void txtProductionModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductionModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductionModeActionPerformed

    private void txtDesignStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDesignStyleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDesignStyleActionPerformed

    private void txtColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorActionPerformed

    private void btnSearchRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRequirementActionPerformed
        // TODO add your handling code here:
        String requirementID=txtSearchRequirement.getText();
        populateRequirementTable(requirementID);
    }//GEN-LAST:event_btnSearchRequirementActionPerformed

    private void btnApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApprovalActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0);   
        //RequirementAssignment requirementAssignment=requirement.getRequirementAssignment();
        requirement.setRequirementstatus("Approved");
        populateRequirementTable();
        JOptionPane.showMessageDialog(null, "Your aprroved this requirement. Now your colleages can place a order on this requirement!", "Information", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnApprovalActionPerformed

    private void btnRefuseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefuseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0); 
        requirement.setRequirementstatus("refused");
        populateRequirementTable();
        JOptionPane.showMessageDialog(null, "Your refused this requirement.This assignment will go back to Design Enterprise!", "Information", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnRefuseActionPerformed

    private void btnRequirementDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequirementDetailActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRequirementTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }    
        Requirement requirement = (Requirement) tblRequirementTable.getValueAt(selectedRowIndex, 0); 
        RequirementDetailJPanel rdjpanel= new RequirementDetailJPanel(WorkArea,business,requirement,brandEnterprise,requirementPlanner);
        WorkArea.add("Requirement Management", rdjpanel);
        CardLayout layout =(CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);
    }//GEN-LAST:event_btnRequirementDetailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproval;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckDesignerSolution;
    private javax.swing.JButton btnCreateNewRequirement;
    private javax.swing.JButton btnDeleteRequirement;
    private javax.swing.JButton btnRefuse;
    private javax.swing.JButton btnRequirementDetail;
    private javax.swing.JButton btnSearchRequirement;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblDesignStyle;
    private javax.swing.JLabel lblDesigner;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblProductionMode;
    private javax.swing.JLabel lblRawMaterial;
    private javax.swing.JLabel lblRequirementID;
    private javax.swing.JScrollPane others;
    private javax.swing.JTable tblRequirementTable;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtDesignStyle;
    private javax.swing.JTextField txtDesigner;
    private javax.swing.JTextField txtProductionMode;
    private javax.swing.JTextField txtRawMaterial;
    private javax.swing.JTextField txtRequirementID;
    private javax.swing.JTextField txtSearchRequirement;
    // End of variables declaration//GEN-END:variables

    public void populateRequirementTable() {
        DefaultTableModel model=(DefaultTableModel)tblRequirementTable.getModel();
        model.setRowCount(0);
        for(Requirement re:brandEnterprise.getProductPlanningOrganization().getRequirementDirectory().getRequirementsDirectory()){
            Object row[] = new Object[8];
            row[0] = re;
            row[1] = re.getRowMaterial();
            row[2] = re.getProductionMode();
            row[3] = re.getDesignerProfile().getPerson().getPersonName();
            row[4] = re.getStyle();
            row[5] = re.getColor();
            row[6] = re.getDeadline();
            row[7] = re.getRequirementstatus();
            model.addRow(row);
            }
    }

    private void populateRequirementTable(String productName) {
        DefaultTableModel model=(DefaultTableModel)tblRequirementTable.getModel();
        model.setRowCount(0);
        for(Requirement re:brandEnterprise.getProductPlanningOrganization().getRequirementDirectory().getRequirementsDirectory()){
            if(re.getRequirementID().equals(productName)){
            Object row[] = new Object[8];
            row[0] = re;
            row[1] = re.getRowMaterial();
            row[2] = re.getProductionMode();
            row[3] = re.getDesignerProfile().getPerson().getPersonName();
            row[4] = re.getStyle();
            row[5] = re.getColor();
            row[6] = re.getDeadline();
            row[7] = re.getRequirementstatus();
            model.addRow(row);
            }
            }
    }
}
